<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.server.mapper.ScoreMapper">

    <select id="selectByStudentId">
        select * from Score sc
            inner join Student st on sc.student_id = st.id
            inner join Course co on sc.course_id = co.id
        where "student_id" = #{student_id}
    </select>

    <select id="selectByCourseId">
        select * from Score sc
            inner join Student st on sc.student_id = st.id
            inner join Course co on sc.course_id = co.id
        where "course_id" = #{course_id}
    </select>

    <select id="selectByStudentAndCourse" resultType="org.example.server.pojo.Score">
        select * from Score where "student_id" = #{student_id} and "course_id" = #{course_id}
    </select>

    <select id="selectAll" resultType="org.example.server.pojo.Score">
        select * from Score sc
            inner join Student st on sc.student_id = st.id
            inner join Course co on sc.course_id = co.id
    </select>

    <update id="updateMark">
        update Score set mark = #{mark} where "student_id" = #{student_id} and "course_id" = #{course_id}
    </update>

    <!--delete不太方便删除单个成绩，故在deleteOnlyScore里用update代替-->
    <delete id="deleteOnlyScore">
        update Score set mark = null where "student_id" = #{student_id} and "course_id" = #{course_id}
    </delete>

    <delete id="deleteForAll">
        delete from Score where  "student_id" = #{student_id} and "course_id" = #{course_id}
    </delete>

    <insert id="insertMark">
        insert into Score (student_id, student_name, course_id, course_name, mark)
        values (#{student_id}, #{student_name}, #{course_id}, #{course_name}, #{mark})
    </insert>

    <!--用于更新每次更改/删除/增加分数时每个人该科目的排名，这里的逻辑可能有点小问题qwq-->
    <update id="calculateRanking" >
        update Score
        set
            ranking =
                (
                    select COUNT(*) + 1
                    from Score
                    where course_id = #{course_id} and mark > #{mark}
                )
        where student_id = #{student_id} and course_id = #{course_id}
    </update>
    
    <update id="updateRanking" parameterType="org.example.server.pojo.Score">
        update Score set ranking = #{ranking} where  "student_id" = #{student_id} and "course_id" = #{course_id}
    </update>


    <select id="getScoreSorted_Ascending" resultType="org.example.server.pojo.Score">
        select * from Score where "course_id"=#{course_id} ORDER BY mark ASC
    </select>

    <select id="getScoreSorted_descending" resultType="org.example.server.pojo.Score">
        select * from Score where "course_id"=#{course_id} ORDER BY mark DESC
    </select>
    <!--有个scoreSave未写，之后补-->

</mapper>