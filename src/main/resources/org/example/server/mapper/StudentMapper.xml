<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.server.mapper.StudentMapper">
    <!--格式化一下，美观一点(?)-->
    <select id="selectById" parameterType="Integer" resultType="org.example.server.pojo.Student">
        select *
        from Student
        where "id" = #{id}
    </select>
    <insert id="insertPersonInfo" parameterType="map" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO person (person_name, person_num,gender_id)
        VALUES (#{student_name}, #{person_num},#{gender_id})
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT last_insert_rowid()
        </selectKey>
    </insert>

    <insert id="insertStudentInfo" parameterType="map">
        INSERT INTO student (person_id, student_name, department, classes, grade, major)
        VALUES (#{person_id}, #{student_name}, #{department}, #{classes}, #{grade}, #{major})
    </insert>
    <select id="findByStudentName" resultType="org.example.server.pojo.Student">
        SELECT *
        FROM Student
        WHERE "student_name" = #{student_name}
    </select>
    <select id="findByDepartment" resultType="org.example.server.pojo.Student">
        SELECT *
        FROM Student
        WHERE "department" = #{department}
    </select>
    <select id="findAllStudent" resultType="org.example.server.pojo.Student">
        SELECT s.*, p.person_num
        FROM student s
                 JOIN person p ON s.person_id = p.id
    </select>
    <select id="selectByPid" resultType="org.example.server.pojo.Student">
        select *
        from Student
        where "person_id" = #{person_id}
    </select>
    <resultMap id="stuFamMap" type="org.example.server.pojo.Student">
        <id property="id" column="id"/>
        <result property="person_id" column="person_id"/>
        <result property="student_name" column="student_name"/>
        <result property="major" column="major"/>
        <collection property="studentFamilies" ofType="org.example.server.pojo.StudentFamily">
            <id property="student_id" column="student_id"/>
            <result property="name" column="name"/>
            <result property="phone" column="phone"/>
            <result property="age" column="age"/>
            <result property="job" column="job"/>
            <result property="address" column="address"/>
            <result property="relation" column="relation"/>
        </collection>
    </resultMap>
    <select id="selectStudentAndStudentFamilyById" resultMap="stuFamMap">
        SELECT s.id,
               s.person_id,
               s.student_name,
               s.major,
               sf.id,
               sf.name,
               sf.phone,
               sf.age,
               sf.job,
               sf.address,
               sf.relation
        FROM student s
                 INNER JOIN student_family sf ON s.id = sf.student_id
        WHERE s.id = #{id}
    </select>
    <resultMap id="studentResultMap" type="org.example.server.pojo.Student">
        <id column="id" property="id"/>
        <result column="person_id" property="person_id"/>
        <result column="student_name" property="student_name"/>
        <result column="department" property="department"/>
        <result column="classes" property="classes"/>
        <result column="grade" property="grade"/>
        <result column="major" property="major"/>
        <!-- One-to-One association -->
        <association property="person" javaType="org.example.server.pojo.Person">
            <id column="person_id" property="id"/>
            <result column="person_name" property="person_name"/>
            <result column="gender_id" property="gender_id"/>
            <result column="person_num" property="person_num"/>
            <!-- One-to-One association -->
            <association property="gender" javaType="org.example.server.pojo.Gender">
                <id column="gender_id" property="id"/>
                <result column="gender" property="gender"/>
            </association>
        </association>
        <!-- One-to-Many association -->
        <collection property="studentFamilies" ofType="org.example.server.pojo.StudentFamily">
            <id column="sf1_id" property="id"/>
            <result column="student_id" property="student_id"/>
            <result column="name" property="name"/>
            <result column="phone" property="phone"/>
            <result column="age" property="age"/>
            <result column="job" property="job"/>
            <result column="address" property="address"/>
            <result column="relation" property="relation"/>
        </collection>
    </resultMap>

    <select id="selectStudentById" resultMap="studentResultMap">
        SELECT s.id,
               s.person_id,
               s.student_name,
               s.department,
               s.classes,
               s.grade,
               s.major,
               p.id as person_id,
               p.person_name,
               p.gender_id,
               g.id as gender_id,
               g.gender,
               sf1.id as sf1_id,
               sf1.student_id,
               sf1.name,
               sf1.phone,
               sf1.age,
               sf1.job,
               sf1.address,
               sf1.relation
        FROM student s
                 LEFT JOIN person p ON s.person_id = p.id
                 LEFT JOIN gender g ON p.gender_id = g.id
                 LEFT JOIN student_family sf1 ON s.id = sf1.student_id
        WHERE s.id = #{id}
    </select>

    <update id="updateStudentName" parameterType="org.example.server.pojo.Student">
        UPDATE Student
        SET student_name = #{student_name}
        WHERE person_id = #{person_id}
    </update>
    <update id="updateStudent" parameterType="map">
        UPDATE student
        SET student_name = #{student_name},
            department = #{department},
            classes = #{classes},
            grade = #{grade},
            major = #{major}
        WHERE id = #{id}
    </update>

    <update id="updateStudentGrade" parameterType="org.example.server.pojo.Student">
        UPDATE Student
        SET grade=#{grade}
        WHERE student_name = #{student_name}
    </update>
    <update id="updateStudentMajor" parameterType="org.example.server.pojo.Student">
        UPDATE Student
        SET major=#{major}
        WHERE student_name = #{student_name}
    </update>
    <delete id="deleteStudentByPidAndName" parameterType="org.example.server.pojo.Student">
        DELETE
        FROM Student
        WHERE person_id = #{person_id}
        AND student_name = #{student_name}
    </delete>
    <delete id="deleteByPid" parameterType="org.example.server.pojo.Student">
        DELETE
        FROM Student
        WHERE person_id = #{person_id}
    </delete>
    <select id="selectByGradeAndClasses" resultType="org.example.server.pojo.Student">
        SELECT *
        FROM Student
        WHERE "grade" = #{grade}
        AND "classes" = #{classes}
    </select>
</mapper>